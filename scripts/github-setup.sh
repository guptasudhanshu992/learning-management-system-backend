#!/bin/bash

# GitHub Repository Setup Script
# This script helps initialize and push your backend to GitHub

echo "üìö FastAPI Backend GitHub Setup"
echo "================================"

# Check if git is installed
if ! command -v git &> /dev/null; then
    echo "‚ùå Git is not installed. Please install Git first."
    exit 1
fi

# Get repository information
read -p "Enter your GitHub username: " GITHUB_USERNAME
read -p "Enter repository name (default: lms-backend): " REPO_NAME
REPO_NAME=${REPO_NAME:-lms-backend}

# Check if already in a git repository
if [ -d ".git" ]; then
    echo "üìÅ Git repository already exists"
    
    # Check if origin remote exists
    if git remote get-url origin &> /dev/null; then
        echo "üîó Remote origin already configured:"
        git remote get-url origin
        read -p "Do you want to update it? (y/N): " update_remote
        if [[ $update_remote == [yY] ]]; then
            git remote set-url origin https://github.com/$GITHUB_USERNAME/$REPO_NAME.git
            echo "‚úÖ Remote origin updated"
        fi
    else
        # Add remote origin
        git remote add origin https://github.com/$GITHUB_USERNAME/$REPO_NAME.git
        echo "‚úÖ Remote origin added"
    fi
else
    # Initialize git repository
    echo "üîß Initializing Git repository..."
    git init
    
    # Add remote origin
    git remote add origin https://github.com/$GITHUB_USERNAME/$REPO_NAME.git
    echo "‚úÖ Git repository initialized and remote added"
fi

# Check if .env file exists and is not in .gitignore
if [ -f ".env" ] && ! grep -q "^\.env$" .gitignore; then
    echo "‚ö†Ô∏è Warning: .env file exists but may not be in .gitignore"
    echo "   Make sure .env is in .gitignore to avoid committing secrets!"
fi

# Add all files
echo "üì¶ Adding files to git..."
git add .

# Create commit
echo "üíæ Creating commit..."
if git diff --staged --quiet; then
    echo "‚ÑπÔ∏è No changes to commit"
else
    read -p "Enter commit message (default: Initial commit - FastAPI LMS Backend): " COMMIT_MESSAGE
    COMMIT_MESSAGE=${COMMIT_MESSAGE:-"Initial commit - FastAPI LMS Backend"}
    git commit -m "$COMMIT_MESSAGE"
    echo "‚úÖ Commit created"
fi

# Set main branch
git branch -M main

# Push to GitHub
echo "üöÄ Pushing to GitHub..."
if git push -u origin main; then
    echo ""
    echo "‚úÖ Successfully pushed to GitHub!"
    echo ""
    echo "üåê Your repository is now available at:"
    echo "   https://github.com/$GITHUB_USERNAME/$REPO_NAME"
    echo ""
    echo "üìñ Next steps:"
    echo "   1. Visit your GitHub repository"
    echo "   2. Update README.md if needed"
    echo "   3. Set up deployment (see DEPLOYMENT.md)"
    echo "   4. Configure GitHub Secrets for CI/CD"
    echo ""
    echo "üöÄ Ready to deploy? Check out these options:"
    echo "   ‚Ä¢ Railway: ./scripts/deploy-railway.sh"
    echo "   ‚Ä¢ Heroku: ./scripts/deploy-heroku.sh your-app-name"
    echo "   ‚Ä¢ DigitalOcean: ./scripts/deploy-digitalocean.sh"
else
    echo ""
    echo "‚ùå Failed to push to GitHub"
    echo "üìã Make sure you have:"
    echo "   1. Created the repository on GitHub"
    echo "   2. Have the correct permissions"
    echo "   3. Set up authentication (SSH keys or token)"
    echo ""
    echo "üîê To set up authentication:"
    echo "   ‚Ä¢ GitHub CLI: gh auth login"
    echo "   ‚Ä¢ SSH: https://docs.github.com/en/authentication/connecting-to-github-with-ssh"
fi